// Code generated by qtc from "index.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/index.html:1
package views

//line views/index.html:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/index.html:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/index.html:2
type Page struct {
	Title       string
	Description string
}

//line views/index.html:8
func StreamIndexPage(qw422016 *qt422016.Writer, p *Page, body string) {
//line views/index.html:8
	qw422016.N().S(`
<!DOCTYPE html>
<html lang="en" data-theme="dark">

<head>
    <title>`)
//line views/index.html:13
	qw422016.E().S(p.Title)
//line views/index.html:13
	qw422016.N().S(`</title>
    <meta charset="utf-8">
    <meta name="description" content="`)
//line views/index.html:15
	qw422016.E().S(p.Description)
//line views/index.html:15
	qw422016.N().S(`">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="./assets/pico.css">
    <script src="./assets/htmx.min.js" async defer></script>

    <script>
        var wsuri = "ws://localhost:1234/ws";
        window.onload = function () {
            console.log("onload");
            sock = new WebSocket(wsuri);
            sock.onopen = function () {
                console.log("connected to " + wsuri);
            }
            sock.onclose = function (e) {
                console.log("connection closed (" + e.code + ")");
            }
            sock.onmessage = function (e) {
                window.location.href = window.location.href
            }
        };
    </script>

</head>

<body>
    `)
//line views/index.html:40
	qw422016.N().S(body)
//line views/index.html:40
	qw422016.N().S(`
</body>

</html>
`)
//line views/index.html:44
}

//line views/index.html:44
func WriteIndexPage(qq422016 qtio422016.Writer, p *Page, body string) {
//line views/index.html:44
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/index.html:44
	StreamIndexPage(qw422016, p, body)
//line views/index.html:44
	qt422016.ReleaseWriter(qw422016)
//line views/index.html:44
}

//line views/index.html:44
func IndexPage(p *Page, body string) string {
//line views/index.html:44
	qb422016 := qt422016.AcquireByteBuffer()
//line views/index.html:44
	WriteIndexPage(qb422016, p, body)
//line views/index.html:44
	qs422016 := string(qb422016.B)
//line views/index.html:44
	qt422016.ReleaseByteBuffer(qb422016)
//line views/index.html:44
	return qs422016
//line views/index.html:44
}

//line views/index.html:48
func StreamIndexBody(qw422016 *qt422016.Writer) {
//line views/index.html:48
	qw422016.N().S(`
<main>
    this is menu
</main>
<div>Hello </div>

<h1> button </h1>
<button hx-get="first">
    <a href="first"></a>
    butt
</button>
<code>this is</code>
`)
//line views/index.html:60
}

//line views/index.html:60
func WriteIndexBody(qq422016 qtio422016.Writer) {
//line views/index.html:60
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/index.html:60
	StreamIndexBody(qw422016)
//line views/index.html:60
	qt422016.ReleaseWriter(qw422016)
//line views/index.html:60
}

//line views/index.html:60
func IndexBody() string {
//line views/index.html:60
	qb422016 := qt422016.AcquireByteBuffer()
//line views/index.html:60
	WriteIndexBody(qb422016)
//line views/index.html:60
	qs422016 := string(qb422016.B)
//line views/index.html:60
	qt422016.ReleaseByteBuffer(qb422016)
//line views/index.html:60
	return qs422016
//line views/index.html:60
}
