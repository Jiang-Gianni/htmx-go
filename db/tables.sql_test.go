// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: tables.sql

package db

import (
	"context"
	"reflect"
	"testing"
)

func TestQueries_GetDummies(t *testing.T) {
	type fields struct {
		db DBTX
	}
	type args struct {
		ctx context.Context
	}
	tests := []struct {
		name    string
		fields  fields
		args    args
		want    []Dummy
		wantErr bool
	}{
		// TODO: Add test cases.
	}
	for _, tt := range tests {
		tt := tt
		t.Run(tt.name, func(t *testing.T) {
			t.Parallel()
			q := &Queries{
				db: tt.fields.db,
			}
			got, err := q.GetDummies(tt.args.ctx)
			if (err != nil) != tt.wantErr {
				t.Errorf("Queries.GetDummies(%v) error = %v, wantErr %v", tt.args.ctx, err, tt.wantErr)
				return
			}
			if !reflect.DeepEqual(got, tt.want) {
				t.Errorf("Queries.GetDummies(%v) = %v, want %v", tt.args.ctx, got, tt.want)
			}
		})
	}
}
